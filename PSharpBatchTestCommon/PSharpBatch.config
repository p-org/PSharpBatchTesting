<?xml version="1.0"?>
<PSharpBatchConfig xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">

	<!-- Id of the Azure Batch pool to be created if does not exists -->
	<PoolId>ExamplePoolId</PoolId>

	<!-- Prefix of the Job ID (a timestamp will be appended to it) -->
	<JobDefaultId>ExampleJobId</JobDefaultId>

	<!-- Prefix of the task id. (a timestamp will be appended to it) -->
	<TaskDefaultId>TaskIdPrefix</TaskDefaultId>

	<!-- Blob access key expiry hours. Enter -1 for infinite expiry hours. -->
	<BlobContainerExpiryHours>1</BlobContainerExpiryHours>

	<!-- Number of nodes to create (minimum of 2 nodes required) -->
	<NumberOfNodesInPool>2</NumberOfNodesInPool>
  
  <!-- Node OS Family. Default Value: 5-->
  <NodeOsFamily>5</NodeOsFamily>
  
  <!-- Node Virtual Machine Size. Default Value: small. Allowed Virtual Machine Sizes: https://docs.microsoft.com/en-us/azure/cloud-services/cloud-services-sizes-specs -->
  <NodeVirtualMachineSize>small</NodeVirtualMachineSize>
  
  <!-- Max concurrent tasks per node. Default Value: 1-->
  <NodeMaxConcurrentTasks>3</NodeMaxConcurrentTasks>

	<!-- Path to the PSharp Binaries folder -->
	<PSharpBinariesFolderPath></PSharpBinariesFolderPath>

	<!-- Path to the output folder -->
	<OutputFolderPath>.\Output</OutputFolderPath>

	<!-- Wait time for monitoring tasks, beyond which the tasks will be terminated -->
	<TaskWaitHours>1</TaskWaitHours>

	<!-- Delete Job after complte -->
	<DeleteJobAfterDone>true</DeleteJobAfterDone>
  <!-- Delete blob container after complete -->
	<DeleteContainerAfterDone>true</DeleteContainerAfterDone>
  <!-- Delete Pool of VMs after complete -->
  <DeletePoolAfterDone>false</DeletePoolAfterDone>
  
  <!-- Test run location -->
  <RunLocally>false</RunLocally>

	<Tests>
		<!-- You can have multiple tests here. Each test will correspond to one binary -->
		<Test Name="Test1">
			<!-- Absolute path to the Binary or application to be tested -->
			<ApplicationPath></ApplicationPath>
			<!-- Test 1 -->
			<!-- You can enter multiple commands here -->
			<!-- Command 1 -->
			<Command Name="Command1" Flags="CommandFlags" /> <!-- Flags should contain /i, /parallel. /Sch is optional -->
			<!-- Command 2 -->
			<Command Name="Command2" Flags="CommandFlags" /> <!-- Flags should contain /i, /parallel. /Sch is optional -->
		</Test>
		<Test Name="Test2">
			<!-- Test 2 -->
			<!-- Do not leave this blank -->
		</Test>
	</Tests>

</PSharpBatchConfig>
